classdef Mechanism < matlab.System
    % Mechanism represents an instance of the construction

    % Public, tunable properties
    properties (SetAccess = private)
        Parameters
        State
    end

    methods
        % Constructor
        function obj = Mechanism(parameters)
            obj.Parameters = parameters;
        end
    end

    methods(Access = public)
        function setState(obj, state)
            obj.State = state;
        end
        
        function calculateState(obj)
            if isempty(obj.State)
                error("State is not initialized");
            end
            
            obj.State.calculate(obj.Parameters);
        end
        
        function drawContext = draw(obj)
            if    isempty(obj.State) ...
               || ~obj.State.Calculated
                error("State is not initialized or not calculated")
            end
            
            % walk around
            drawContext.MechanismX=[obj.State.CoordinateA.X ...
             , obj.State.PositionerCoordinateF.Coordinate.X ...
             , obj.State.CoordinateB.X ...
             , obj.State.PositionerCoordinateE.Coordinate.X ...
             , obj.State.CoordinateC.X ...
             , obj.State.PositionerCoordinateD.Coordinate.X ...
             , obj.State.CoordinateA.X ...
             , obj.State.CoordinateB.X ...
             , obj.State.CoordinateC.X ...
             , obj.State.CoordinateA.X];
            drawContext.MechanismY=[obj.State.CoordinateA.Y ...
             , obj.State.PositionerCoordinateF.Coordinate.Y ...
             , obj.State.CoordinateB.Y ...
             , obj.State.PositionerCoordinateE.Coordinate.Y ...
             , obj.State.CoordinateC.Y ...
             , obj.State.PositionerCoordinateD.Coordinate.Y ...
             , obj.State.CoordinateA.Y ...
             , obj.State.CoordinateB.Y ...
             , obj.State.CoordinateC.Y ...
             , obj.State.CoordinateA.Y];
            drawContext.MechanismZ=[obj.State.CoordinateA.Z ...
             , obj.State.PositionerCoordinateF.Coordinate.Z ...
             , obj.State.CoordinateB.Z ...
             , obj.State.PositionerCoordinateE.Coordinate.Z ...
             , obj.State.CoordinateC.Z ...
             , obj.State.PositionerCoordinateD.Coordinate.Z ...
             , obj.State.CoordinateA.Z ...
             , obj.State.CoordinateB.Z ...
             , obj.State.CoordinateC.Z ...
             , obj.State.CoordinateA.Z];
            
%             grid on
%             hold on
%             axis([-15 15 -15 15 0 15]);
%             view(45,45);
%             xlabel('X');
%             ylabel('Y');
%             zlabel('Z');
%             title('Sketch of the mechanism');

            %Create a plot
%             plot3(x,y,z,'-go',...
%                                 'LineWidth',4,...
%                                 'MarkerEdgeColor','k',...
%                                 'MarkerFaceColor','r',...
%                                 'MarkerSize',10);

%             plot3([obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.X ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateB.X ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateC.X ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateD.X ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.X], ...
%                   [obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.Y ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateB.Y ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateC.Y ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateD.Y ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.Y], ...
%                   [obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.Z ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateB.Z ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateC.Z ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateD.Z ...
%                  , obj.State.PositionerCoordinateF.DriverRectangle.CoordinateA.Z] ...
%                  ,'-', 'LineWidth',4);
%             plot3([obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.X ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateB.X ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateC.X ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateD.X ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.X], ...
%                   [obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.Y ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateB.Y ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateC.Y ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateD.Y ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.Y], ...
%                   [obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.Z ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateB.Z ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateC.Z ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateD.Z ...
%                  , obj.State.PositionerCoordinateD.DriverRectangle.CoordinateA.Z] ...
%                  ,'-', 'LineWidth',4);
%             plot3([obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.X ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateB.X ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateC.X ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateD.X ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.X], ...
%                   [obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.Y ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateB.Y ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateC.Y ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateD.Y ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.Y], ...
%                   [obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.Z ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateB.Z ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateC.Z ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateD.Z ...
%                  , obj.State.PositionerCoordinateE.DriverRectangle.CoordinateA.Z] ...
%                  ,'-', 'LineWidth',4);
             
             %Plot circles
             drawContext.CircleX = obj.Parameters.StatorRadius*cos(-pi:0.01:pi);
             drawContext.CircleY = obj.Parameters.StatorRadius*sin(-pi:0.01:pi);
%              plot3(x, y, zeros(1, numel(x)),'-b', 'LineWidth',2);
             
             % lines
            drawContext.LineX=[0 ...
             , obj.State.PositionerCoordinateF.Coordinate.X * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateF.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateF.Coordinate.Y^2) ...
             , 0 ...
             , obj.State.PositionerCoordinateD.Coordinate.X * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateD.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateD.Coordinate.Y^2) ...
             , 0 ...
             , obj.State.PositionerCoordinateE.Coordinate.X * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateE.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateE.Coordinate.Y^2)];
            drawContext.LineY=[0 ...
             , obj.State.PositionerCoordinateF.Coordinate.Y * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateF.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateF.Coordinate.Y^2) ...
             , 0 ...
             , obj.State.PositionerCoordinateD.Coordinate.Y * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateD.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateD.Coordinate.Y^2) ...
             , 0 ...
             , obj.State.PositionerCoordinateE.Coordinate.Y * obj.Parameters.StatorLine ...
               / sqrt(obj.State.PositionerCoordinateE.Coordinate.X^2 ...
                    + obj.State.PositionerCoordinateE.Coordinate.Y^2)];
            drawContext.LineZ=[0, 0, 0, 0, 0, 0];

            %Create a plot
%             plot3(x,y,z,'-ro',...
%                                 'LineWidth',4,...
%                                 'MarkerEdgeColor','k',...
%                                 'MarkerFaceColor','r',...
%                                 'MarkerSize',5);
        end
    end
end
